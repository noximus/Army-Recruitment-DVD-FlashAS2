import mx.transitions.Tween;import mx.transitions.easing.None;import mx.utils.Delegate;import util.xml.XMLSA;import type.XString;import com.senocular.ColorFader;class ui.nav.NavigationItem extends MovieClip{		private var mc:MovieClip;	public var mc_glow,mc_bkgd,mc_starL,mc_starR:MovieClip;	private var tweens:Object;		//our id.  this is in the xml doc.	private var id:String;	private var cf:ColorFader;		private var yellow:Number=0xFFCC00;	private var white:Number=0xFFFFFF;		private static var activeItem:NavigationItem=null;	private var _xml:XMLSA;	private var settings:Settings;		public var tf_name:TextField;	public var mc_name:MovieClip;		function NavigationItem(){				GetXML();	}	private function GetXML():Void{		settings = new Settings();		/*		for some reason or another when we have a navgationItem in a different frame		and then try to set the xml property or call any functions, they don't see to be		available .... so let's get the xml for this item on its own.								*/		var item:XMLSA;		for(var i=0;i<settings.nav.xml.items.item.length;i++){			item = settings.nav.xml.items.item[i];			if(item.target.getValue()==this._name){				xml = item;				break;			}		}					}	private function init():Void{				mc = this;		tweens = new Object();				//colorfader of the textfield		//cf = new ColorFader(mc_name.tf_name);		cf = new ColorFader(tf_name);		cf.fadeTo(yellow,1);				mc_glow=mc_bkgd.mc_glow;		mc_glow._alpha=0;		mc_starL._alpha=0;		mc_starR._alpha=0;				settings = new Settings();		settings.nav.addEventListener("navitem",Delegate.create(this,broadcastHandler));		id=xml.id.getValue();						//make this clickable.		EnableMouseEvents();			}	public function broadcastHandler(eventObject:Object):Void{		if(eventObject.id==id || !eventObject.id){			var func:Function=this[eventObject.functionName];			func.call(this,eventObject.params);		}	}	public function EnableMouseEvents():Void{		//make this respond to mouse events		mc.onPress=Delegate.create(this,_press);		mc.onRollOver=Delegate.create(this,_rollover);		mc.onRollOut=Delegate.create(this,_rollout);	}	public function DisableMouseEvents():Void{		//make this unclickable once it's been clicked.		delete(mc.onRollOut);		delete(mc.onRollOver);		delete(mc.onPress);	}	private function _rollover():Void{		settings.sounds.Play("sound.over");		if(mc_glow._alpha<50){			mc_glow._alpha=50;			mc_starL._alpha=100;			mc_starR._alpha=100;		}		cf.fadeTo(white,20);		tweens.mcglow.stop();		tweens.mcglow = new Tween(mc_glow,"_alpha",None.easeNone,mc_glow._alpha,90,5,false);			}	private function _rollout():Void{		cf.fadeTo(yellow, 200);		tweens.mcglow.stop();		tweens.mcglow = new Tween(mc_glow,"_alpha",None.easeNone,mc_glow._alpha,50,5,false);		tweens.mcstarL = new Tween(mc_starL,"_alpha",None.easeNone,mc_starL._alpha,0,5,false);		tweens.mcstarR = new Tween(mc_starR,"_alpha",None.easeNone,mc_starR._alpha,0,5,false);		tweens.mcglow.onMotionFinished=function(){			this.obj._alpha=0;		}	}	private function _press():Void{		Select();	}	public function Unselect():Void{		EnableMouseEvents();		_rollout();		cf.fadeTo(yellow,150);	}	public function Select():Void{				//make this the active item in settings		settings.nav.activeNavitem=this;		settings.sounds.Play("sound.select");				//fade to white		cf.fadeTo(white,1);				//unselect the active item (static in this class)		if(activeItem!=null){			activeItem.Unselect();		}		activeItem=this;				//make this unclickable		DisableMouseEvents();				//bring up the glow		tweens.mcglow.stop();		tweens.mcglow = new Tween(mc_glow,"_alpha",None.easeNone,mc_glow._alpha,100,3,false);		tweens.mcstarL = new Tween(mc_starL,"_alpha",None.easeNone,mc_starL._alpha,100,5,false);		tweens.mcstarR = new Tween(mc_starR,"_alpha",None.easeNone,mc_starR._alpha,100,5,false);						/*			<item>				<title>FOR PARENTS</title>				<target>mc_parents</target>				<xml>[section]/parents.xml</xml>			</item>						.... so now we have to replace [section] with the section that we're in from Settings();					*/		var sectionXML:XString = new XString(xml.xml.getValue());		sectionXML = sectionXML.replace("[section]",settings.sectionID);		settings.ref.LoadSection(sectionXML);	}	public function get xml():XMLSA{		return _xml;	}	public function set xml(val:XMLSA):Void{		_xml=val;		init();	}	}